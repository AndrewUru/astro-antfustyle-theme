---

---

<button
  id="toggle-theme"
  class="op-60 hover:op-100"
  title="Toggle Color Scheme"
>
  <div u-i-ri-sun-line u-dark:i-ri-moon-line></div>
</button>

<script>
  document.addEventListener('astro:after-swap', () => {
    localStorage.theme === 'light'
      ? document.documentElement.classList.remove('dark')
      : document.documentElement.classList.add('dark')
  })
</script>

<script>
  document.addEventListener('astro:page-load', () => {
    const theme = (() => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme')!
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark'
      }
      return 'light'
    })()

    theme === 'light'
      ? document.documentElement.classList.remove('dark')
      : document.documentElement.classList.add('dark')

    window.localStorage.setItem('theme', theme)

    const handleToggle = (event: MouseEvent) => {
      let isDark: boolean

      const toggle = () => {
        document.documentElement.classList.toggle('dark')
        isDark = document.documentElement.classList.contains('dark')
        window.localStorage.setItem('theme', isDark ? 'dark' : 'light')
      }

      const isAppearanceTransition =
        // @ts-expect-error (View Transitions API)
        document.startViewTransition &&
        !window.matchMedia('(prefers-reduced-motion: reduce)').matches

      if (!isAppearanceTransition) {
        toggle()
        return
      }

      const x = event.clientX
      const y = event.clientY
      const endRadius = Math.hypot(
        Math.max(x, innerWidth - x),
        Math.max(y, innerHeight - y)
      )

      // @ts-expect-error (View Transitions API)
      const transition = document.startViewTransition(() => toggle())

      transition.ready.then(() => {
        const clipPath = [
          `circle(0px at ${x}px ${y}px)`,
          `circle(${endRadius}px at ${x}px ${y}px)`,
        ]

        document.documentElement.animate(
          {
            clipPath: isDark ? clipPath.reverse() : clipPath,
          },
          {
            duration: 400,
            easing: 'ease-out',
            pseudoElement: isDark
              ? '::view-transition-old(root)'
              : '::view-transition-new(root)',
          }
        )
      })
    }

    const toggleThemeButton = document.getElementById('toggle-theme')
    toggleThemeButton?.addEventListener('click', (event) => handleToggle(event))
  })
</script>
