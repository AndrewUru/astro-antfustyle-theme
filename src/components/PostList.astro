---
import { getCollection } from 'astro:content'

import BaseLayout from '~/layouts/BaseLayout.astro'
import TabbedLayout from '~/layouts/TabbedLayout.astro'
import Categorizer from '~/components/Categorizer.astro'
import PostItem from '~/components/PostItem.astro'

import type { ContentEntryMap } from 'astro:content'
import type { BgType } from '~/types'

import { isSameYear, getYear } from '~/utils'
import { items } from '~/types'

interface Props {
  collectionType: keyof ContentEntryMap
  title: string
  description?: string
  bgType?: BgType
}

const { collectionType, title, description, bgType } = Astro.props

const posts = await getCollection(collectionType, ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true
})

const sortedPosts = posts.sort(
  (a, b) => b.data.created.valueOf() - a.data.created.valueOf()
)
---

<BaseLayout {title} {description} {bgType}>
  <TabbedLayout {items}>
    <ul>
      {
        sortedPosts.length === 0 ? (
          <div class="py-2 op-50">nothing here yet</div>
        ) : (
          sortedPosts.map((post, idx) => (
            <>
              {!isSameYear(
                post.data.created,
                sortedPosts[idx - 1]?.data.created
              ) && (
                <Categorizer
                  {idx}
                  text={getYear(post.data.created).toString()}
                />
              )}
              <PostItem collection={'blog'} {idx} {post} />
            </>
          ))
        )
      }
    </ul>
  </TabbedLayout>
</BaseLayout>
